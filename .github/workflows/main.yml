name: Validate packages & output.txt

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest

    env:
      OUTPUT_FILE: output.txt   # ajuste se o caminho for diferente (ex.: dist/output.txt)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install & upgrade project deps
        run: |
          if [ -f requirements.txt ]; then
            # instala e for√ßa atualiza√ß√£o para as √∫ltimas vers√µes compat√≠veis
            pip install --upgrade -r requirements.txt
          elif [ -f pyproject.toml ]; then
            # ajuste aqui conforme seu gerenciador (poetry/pdm/hatch)
            pip install build
          else
            echo "Nenhum requirements.txt/pyproject.toml encontrado." && exit 1
          fi

      - name: Fail if any package is still outdated
        run: |
          # lista pacotes desatualizados; falha se tiver algum
          COUNT=$(python -m pip list --outdated --format=freeze | wc -l)
          if [ "$COUNT" -gt 0 ]; then
            echo "::error::Ainda h√° pacotes desatualizados:"
            python -m pip list --outdated
            exit 1
          fi
          echo "Todos os pacotes est√£o atualizados."

      - name: Run your app to produce output.txt
        run: |
          # üëá SUBSTITUA o comando abaixo pelo comando real do seu projeto
          # Exemplos:
          #   python main.py
          #   python -m backend.processar --saida "$OUTPUT_FILE"
          #   python scripts/gerar_output.py -o "$OUTPUT_FILE"
          python main.py

      - name: Check output.txt exists
        run: |
          if [ ! -f "$OUTPUT_FILE" ]; then
            echo "::error::Arquivo $OUTPUT_FILE n√£o foi gerado."
            ls -la
            exit 1
          fi
          echo "Arquivo $OUTPUT_FILE gerado com sucesso."

      - name: Upload output.txt as artifact
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: ${{ env.OUTPUT_FILE }}
