name: CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------- Python CI ----------
  python-ci:
    if: ${{ hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != '' || hashFiles('setup.cfg') != '' || hashFiles('setup.py') != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            pip install build
            # ajuste aqui conforme seu gerenciador (poetry/pdm/hatch)
          else
            pip install pytest flake8
          fi

      - name: Lint (flake8, se disponível)
        run: |
          if python -c "import flake8" 2>/dev/null; then
            flake8 .
          else
            echo "flake8 não encontrado; pulando lint."
          fi

      - name: Testes (pytest, se existir)
        run: |
          if compgen -G "tests/test_*.py" > /dev/null || compgen -G "*_test.py" > /dev/null || compgen -G "tests/*_test.py" > /dev/null; then
            pytest -q
          else
            echo "Nenhum teste encontrado; pulando pytest."
          fi

      - name: Build artefato
        run: |
          set -e
          if [ -f pyproject.toml ] || [ -f setup.py ] || [ -f setup.cfg ]; then
            python -m pip install build
            python -m build
            mkdir -p artifact && cp -r dist/* artifact/
          else
            mkdir -p artifact
            zip -r artifact/project.zip . -x ".git/*" ".github/*"
          fi

      - name: Upload artefato (Python)
        uses: actions/upload-artifact@v4
        with:
          name: build-python
          path: artifact/

  # ---------- Node.js CI (opcional) ----------
  node-ci:
    if: ${{ hashFiles('package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install
